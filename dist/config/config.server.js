/**
 * rapidJS: Automatic serving, all-implicit-routing, pluggable fullstack scoped
 *          function modules, un-opinionated templating. 
 * 
 * Copyright (c) Thassilo Martin Schiepanski
 */
"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0});const path_1=require("path"),fs_1=require("fs"),args_1=require("../args"),normalize_1=require("../utilities/normalize"),default_config_json_1=__importDefault(require("./default.config.json")),reader_1=require("./reader"),callDirPath=(0,path_1.dirname)(process.argv[1]),argsDirPath=(0,args_1.argument)("path"),projectDirPath="string"==typeof argsDirPath?/[^/]/.test(argsDirPath)?(0,path_1.join)(callDirPath,argsDirPath):argsDirPath:callDirPath;function normalizePath(e,r){var i="/"!=r.charAt(0)?(0,path_1.join)(projectDirPath,r):r;if(!(0,fs_1.existsSync)(i))throw new ReferenceError(e+` directory given in server configuration file does not exist '${i}'`);return(0,path_1.join)(projectDirPath,r)}function normalizeExtensionArray(e){return(e||[]).map(e=>(0,normalize_1.normalizeExtension)(e))}const config=(0,reader_1.read)("config",default_config_json_1.default)||(0,reader_1.read)("server",default_config_json_1.default);0<config.locale.length&&(config.directory.lang=normalizePath("Lang",config.directory.lang)),config.directory.log&&(config.directory.log=normalizePath("Log",config.directory.log)),config.directory.web=normalizePath("Web",config.directory.web);for(const g in config.ssl||{})config.ssl[g]=normalizePath("SSL",config.ssl[g]);config.extensionWhitelist=normalizeExtensionArray(config.extensionWhitelist),config.gzipCompressList=normalizeExtensionArray(config.gzipCompressList);const normalizedMimesMap={};for(const h in config.mimes)normalizedMimesMap[(0,normalize_1.normalizeExtension)(h)]=config.mimes[h];config.mimes=normalizedMimesMap,exports.default=config;