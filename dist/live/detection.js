/**
 * rapidJS: Automatic serving, all-implicit-routing, pluggable fullstack scoped
 *          function modules, un-opinionated templating. 
 * 
 * Copyright (c) Thassilo Martin Schiepanski
 */
"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(e,t,i,r){void 0===r&&(r=i),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[i]}})}:function(e,t,i,r){e[r=void 0===r?i:r]=t[i]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),__importStar=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var i in e)"default"!==i&&Object.prototype.hasOwnProperty.call(e,i)&&__createBinding(t,e,i);return __setModuleDefault(t,e),t},__importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.registerDetection=void 0;const config={detectionFrequency:1e3},fs_1=require("fs"),path_1=require("path"),output=__importStar(require("../utilities/output")),is_dev_mode_1=__importDefault(require("../utilities/is-dev-mode")),server_1=require("./server"),modRegistry=[];function fileModified(e){return Math.abs(e-Date.now())<config.detectionFrequency}async function scanDir(i,r,o=!0){(0,fs_1.existsSync)(i)&&(0,fs_1.readdir)(i,{withFileTypes:!0},(e,t)=>{(t||[]).forEach(e=>{var t=(0,path_1.join)(i,e.name);if(o&&e.isDirectory())return scanDir(t,r,o);checkFile(t,r)})})}async function checkFile(i,r){(0,fs_1.stat)(i,(e,t)=>{(fileModified(t.birthtime)||fileModified(t.mtimeMs))&&(output.log(`File modified: Initiated live reload - `+i),r&&r(),(0,server_1.proposeRefresh)())})}function registerDetection(e,t,i=!0){is_dev_mode_1.default&&modRegistry.push({path:e,recursive:i,callback:t})}exports.registerDetection=registerDetection,setInterval(e=>{try{modRegistry.forEach(e=>{(0,fs_1.lstatSync)(e.path).isDirectory()?scanDir(e.path,e.callback,e.recursive):checkFile(e.path,e.callback)})}catch(e){output.log("An error occurred scanning project files for modification in live mode"),output.error(e)}},config.detectionFrequency);