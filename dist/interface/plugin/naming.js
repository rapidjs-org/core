/**
 * rapidJS: Automatic serving, all-implicit-routing, pluggable fullstack scoped
 *          function modules, un-opinionated templating. 
 * 
 * Copyright (c) Thassilo Martin Schiepanski
 */
"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.readPluginConfig=exports.getNameByReference=exports.getNameByCall=exports.getPathByCall=void 0;const fs_1=require("fs"),path_1=require("path"),config_plugins_1=__importDefault(require("../../config/config.plugins")),bindings_1=require("../bindings");function getCallerPath(e){const t=new Error;for(Error.prepareStackTrace=(e,t)=>t;t.stack.length;){var r=t.stack.shift().getFileName();if(r!==(e||null)&&r!==__filename)return r}throw new ReferenceError("Failed to retrieve path to plug-in caller module")}function getPathByCall(e){return(0,path_1.dirname)(getCallerPath(e))}function getNameByCall(e){let t=getCallerPath(e);t=t.trim().replace(/\.ts$/,"");for(const r in Array.from(bindings_1.pluginRegistry.keys()))if(bindings_1.pluginRegistry[r].reference===t)return r}function getNameByReference(e){if(!/^((\.)?\.)?\//.test(e))return e.toLowerCase();/^[^/]/.test(e)&&(e=(0,path_1.join)((0,path_1.dirname)(require.main.filename),e));var t=(0,path_1.join)((0,path_1.dirname)(e),"package.json");const r=(0,fs_1.existsSync)(t)?require(t).name:null;return r?r.toLowerCase():(0,path_1.basename)(e).replace(/\.[a-z]+$/,"")}function readPluginConfig(e){var t=getNameByCall(__filename),t=config_plugins_1.default[t];return t?t[e]:void 0}exports.getPathByCall=getPathByCall,exports.getNameByCall=getNameByCall,exports.getNameByReference=getNameByReference,exports.readPluginConfig=readPluginConfig;