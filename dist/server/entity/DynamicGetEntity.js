/**
 * rapidJS: Automatic serving, all-implicit-routing, pluggable fullstack scoped
 *          function modules, un-opinionated templating. 
 * 
 * Copyright (c) Thassilo Martin Schiepanski
 */
"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.DynamicGetEntity=void 0;const config=Object.assign(Object.assign({},require("../config.json")),{dynamicCachingDuration:1e3}),fs_1=require("fs"),path_1=require("path"),config_server_1=__importDefault(require("../../config/config.server")),ClientError_1=require("../../interface/ClientError"),modifiers_1=require("../../mods/modifiers"),registry_1=require("../../interface/plugin/registry"),server_1=require("../../live/server"),GetEntity_1=require("./GetEntity");class DynamicGetEntity extends GetEntity_1.GetEntity{constructor(e,t){super(e,t),this.isCompound=!1,this.extension=config.dynamicFileExtension}read(){var e=String(super.read()),e=String((0,modifiers_1.renderModifiers)(e,!0));return e=(0,registry_1.integratePluginReferences)(e,this.isCompound),e=(0,server_1.integrateLiveReference)(e),Buffer.from(e,"utf-8")}respond(e){if(config_server_1.default.allowFramedLoading||this.setHeader("X-Frame-Options","SAMEORIGIN"),"2"!=e.toString().charAt(0))for(;this.url.pathname=(0,path_1.join)((0,path_1.dirname)(this.url.pathname),e+"."+config.dynamicFileExtension),!(0,fs_1.existsSync)(this.localPath())&&0<this.url.pathname.length;);try{super.respond(e,this.read())}catch(e){if(e instanceof ClientError_1.ClientError)return this.respond(e.status);throw e}}process(){return(0,fs_1.existsSync)(this.localPath())?this.respond(200):(this.url.pathname=(0,path_1.join)((0,path_1.dirname)(this.url.pathname),(0,path_1.basename)(this.url.pathname).replace(/\.[a-z0-9]+$/i,""),(0,path_1.basename)(this.url.pathname)),(0,fs_1.existsSync)(this.localPath())?(this.isCompound=!0,this.respond(200)):void this.respond(404))}getReducedRequestInfo(){var e=super.getReducedRequestInfo();return Object.assign(Object.assign({},e),{pathname:this.isCompound?(0,path_1.dirname)(this.url.pathname):this.url.pathname,isCompound:this.isCompound})}}exports.DynamicGetEntity=DynamicGetEntity;