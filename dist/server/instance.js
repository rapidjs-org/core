/**
 * rapidJS: Automatic serving, all-implicit-routing, pluggable fullstack scoped
 *          function modules, un-opinionated templating. 
 * 
 * Copyright (c) Thassilo Martin Schiepanski
 */
"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(t,e,r,i){void 0===i&&(i=r),Object.defineProperty(t,i,{enumerable:!0,get:function(){return e[r]}})}:function(t,e,r,i){t[i=void 0===i?r:i]=e[r]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(t,e){Object.defineProperty(t,"default",{enumerable:!0,value:e})}:function(t,e){t.default=e}),__importStar=this&&this.__importStar||function(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var r in t)"default"!==r&&Object.prototype.hasOwnProperty.call(t,r)&&__createBinding(e,t,r);return __setModuleDefault(e,t),e},__awaiter=this&&this.__awaiter||function(t,s,a,u){return new(a=a||Promise)(function(r,e){function i(t){try{o(u.next(t))}catch(t){e(t)}}function n(t){try{o(u.throw(t))}catch(t){e(t)}}function o(t){var e;t.done?r(t.value):((e=t.value)instanceof a?e:new a(function(t){t(e)})).then(i,n)}o((u=u.apply(t,s||[])).next())})},__importDefault=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(exports,"__esModule",{value:!0});const config_json_1=__importDefault(require("../config.json")),http=__importStar(require("http")),https=__importStar(require("https")),fs_1=require("fs"),path_1=require("path"),is_dev_mode_1=__importDefault(require("../utilities/is-dev-mode")),output=__importStar(require("../utilities/output")),normalize_1=require("../utilities/normalize"),config_server_1=__importDefault(require("../config/config.server")),rate_limiter_1=require("./support/rate-limiter"),Entity_1=require("./entity/Entity"),StaticGetEntity_1=require("./entity/StaticGetEntity"),DynamicGetEntity_1=require("./entity/DynamicGetEntity"),PostEntity_1=require("./entity/PostEntity"),hook_1=require("./hook"),entityConstructor={BASIC:Entity_1.Entity,GET:{STATIC:StaticGetEntity_1.StaticGetEntity,DYNAMIC:DynamicGetEntity_1.DynamicGetEntity},POST:PostEntity_1.PostEntity},options={};if(config_server_1.default.ssl){const H=t=>(t="/"==t.charAt(0)?t:(0,path_1.join)((0,path_1.dirname)(require.main.filename),t),(0,fs_1.readFileSync)(t));options.cert=config_server_1.default.ssl.certFile?H(config_server_1.default.ssl.certFile):null,options.key=config_server_1.default.ssl.keyFile?H(config_server_1.default.ssl.keyFile):null,options.dhparam=config_server_1.default.ssl.dhParam?H(config_server_1.default.ssl.dhParam):null}const protocol=config_server_1.default.port.https?"https":"http";function handleRequest(i,n){return __awaiter(this,void 0,void 0,function*(){let e;switch(i.method.toUpperCase()){case"GET":var t=(0,path_1.extname)(i.url),r=t?(0,normalize_1.normalizeExtension)(t):config_json_1.default.dynamicFileExtension;if(e=new entityConstructor.GET[r==config_json_1.default.dynamicFileExtension?"DYNAMIC":"STATIC"](i,n),e instanceof entityConstructor.GET.DYNAMIC&&0==t.length)return e.redirect(i.url.replace(new RegExp(`\\.${config_json_1.default.dynamicFileExtension}($|\\?)`),"$1"));break;case"POST":e=new entityConstructor.POST(i,n);break;default:return new entityConstructor.BASIC(i,n).respond(405)}if((0,hook_1.createHook)(e),i.url.length>config_server_1.default.maxUrlLength)return e.respond(414);if((0,rate_limiter_1.rateExceeded)(i.connection.remoteAddress))return e.setHeader("Retry-After",3e4),e.respond(429);try{e.process()}catch(t){output.error(t),e.respond(500)}})}(config_server_1.default.port.https?https:http).createServer(options,handleRequest).listen(config_server_1.default.port[protocol],config_server_1.default.hostname,config_server_1.default.maxPending,()=>{output.log("Server started listening on port "+config_server_1.default.port[protocol]),is_dev_mode_1.default&&output.log("Running DEV MODE")}),config_server_1.default.port.https&&http.createServer((t,e)=>{new entityConstructor.BASIC(t,e).redirect("https://"+t.headers.host+t.url)}).listen(config_server_1.default.port.http,config_server_1.default.hostname,config_server_1.default.maxPending,()=>{output.log(`HTTP (:${config_server_1.default.port.http}) to HTTPS (:${config_server_1.default.port.https}) redirection enabled`)});